# This file describes how to convert from one file format to another.
# "uconvert" examines each rule in order top to bottom, left to right until
# a matching rule is found. You should also list lossless files before
# lossy files in the "IN: " lines---so new files are made from the highest
# quality source file available.

# Assume that the command will be run in the same directory as the input
# file with the bash shell.

# If a conversion command fails, the remaining conversion commands will be
# checked to see if they are able to do the appropriate conversion instead.

# uconvert does NOT chain multiple commands together



# ======================================
# Inkscape seems better at converting from svg files than ImageMagick.
# ======================================

# svg -> eps without rasterizing using inkscape
# --export-text-to-path renders the text instead of letting the viewer render it
IN: svg svgz
OUT: eps
COMMAND: inkscape -D --without-gui --export-text-to-path --file="BASE.IN" --export-eps=BASE.OUT

# svg -> ps
IN: svg svgz
OUT: ps
COMMAND: inkscape -D --without-gui --file="BASE.IN" --export-ps=BASE.OUT

# svg -> pdf
IN: svg svgz
OUT: pdf
COMMAND: inkscape -D --without-gui --export-text-to-path --file="BASE.IN" --export-pdf="BASE.OUT" && ps2pdf "BASE.OUT" "BASE.OUT".tmp && mv "BASE.OUT".tmp "BASE.OUT"
# inkscape exports to pdf version 1.5---which can make xelatex and others upset.  The command
# above fixes that
#COMMAND: inkscape -D --without-gui --export-text-to-path --file="BASE.IN" --export-pdf="BASE.OUT"

# svg -> png
IN: svg svgz
OUT: png
COMMAND: inkscape -D --without-gui --file="BASE.IN" --export-png="BASE.OUT"

# --- HTML to PDF
IN: html
OUT: pdf
COMMAND: wkhtmltopdf "BASE.IN" "BASE.OUT"


# ---  pandoc ---
IN: text txt markdown tex
OUT: text txt markdown html tex docbook odt rtf
COMMAND: pandoc -o "BASE.OUT" "BASE.IN"

IN: markdown
OUT: pdf
COMMAND: markdown2pdf -o "BASE.OUT" "BASE.IN"




# --- LaTeX related stuff ---
IN: dvi
OUT: ps
COMMAND: dvips -o "BASE.OUT" "BASE.IN"

IN: dvi
OUT: pdf
COMMAND: dvipdf "BASE.IN" "BASE.OUT"

# Creates png image of first page in dvi file
IN: dvi
OUT: png
COMMAND: dvipng -pp 1 -f "BASE.OUT" "BASE.IN"

# Creates gif image of first page in dvi file
IN: dvi
OUT: gif
COMMAND: dvigif -pp 1 -f "BASE.OUT" "BASE.IN"


# --- EPS <--> Postscript <--> PDF conversions ---
# prepress ensures embedded fonts
IN: ps
OUT: pdf
COMMAND: ps2pdf -dPDFSETTINGS=/prepress "BASE.IN" "BASE.OUT"

# prepress ensures embedded fonts
IN: eps
OUT: pdf
COMMAND: ps2pdf -dPDFSETTINGS=/prepress -dEPSCrop "BASE.IN" "BASE.OUT"

IN: ps.gz
OUT: pdf
COMMAND: gunzip -c "BASE.IN" | ps2pdf - "BASE.OUT"

IN: pdf
OUT: ps
COMMAND: pdftops -level3 "BASE.IN" "BASE.OUT"

IN: pdf
OUT: eps
COMMAND: pdftops -level3 -eps "BASE.IN" "BASE.OUT"

# --- XFIG stuff ---
# xfig files to eps
IN: fig
OUT: eps
COMMAND: fig2dev -L eps "BASE.IN" "BASE.OUT"

# xfig files to bitmap (via eps)
IN: fig
OUT: bmp gif ico png pnm ppm tiff tif xcf rgb rgba jp2 jpeg jpg
COMMAND: fig2dev -L eps "BASE.IN" | convert -density 300 - "BASE.OUT"

# xfig files to MetaPost
# (mpost command requires texlive-metapost on Ubuntu)
IN: fig
OUT: mps
COMMAND: fig2dev -L mp "BASE.IN" "BASE.mp" && mpost "BASE.mp" &> /dev/null && rm -f "BASE.log" "BASE.mpx" && mv "BASE.0" "BASE.OUT"

# metapost, assumes that the mp file creates a file named BASE.0: (mpost
# command requires texlive-metapost on Ubuntu) Rename file to ".mps" (works
# with latex, xelatex) or ".ps" (works with lualatex, pdflatex)
IN: mp
OUT: mps ps
COMMAND: mpost "BASE.mp" &> /dev/null && rm -f "BASE.log" "BASE.mpx" && mv "BASE.0" "BASE.OUT"


# rsvg-convert from librsvg2-bin package
# Use zoom to increase resolution (--dpi-x and --dpi-y don't work for me)
IN: svg
OUT: png
COMMAND: rsvg-convert --keep-aspect-ratio --zoom=4 "BASE.IN" --output "BASE.OUT"

IN: svg
OUT: jpg
COMMAND: rsvg-convert --keep-aspect-ratio --zoom=4 "BASE.IN" --output "BASE.OUT"

IN: svg
OUT: pdf
COMMAND: rsvg-convert --format pdf "BASE.IN" --output "BASE.OUT"

IN: svg
OUT: ps
COMMAND: rsvg-convert --format ps "BASE.IN" --output "BASE.OUT"





# --- ImageMagick ---

# General ImageMagick conversion (NOTE: This converts everything into
# bitmap form even if the output file format is vector-based).  The
# "-density" argument indicates how to sample vector files (in dpi)---and
# therefore changes the size of the resuling bitmap image.
IN:  eps ps svg svgz pdf wmf bmp gif ico png pnm ppm tga tiff tif xcf rgb rgba jp2 jpeg jpg
OUT: ps svg svgz pdf wmf bmp gif ico png pnm ppm tga tiff tif xcf rgb rgba jp2 jpeg jpg
COMMAND: convert -density 300 "BASE.IN" "BASE.OUT"

# Convert to the lowest PostScript level which gives good file sizes:
IN: png tiff tif bmp rgb
OUT: eps
COMMAND: convert "BASE.IN" "eps3:BASE.OUT"

IN: jpg jpeg
OUT: eps
COMMAND: convert "BASE.IN" "eps2:BASE.OUT"

# GraphicsMagick version
# TODO: Add more GraphicsMagick versions to this file (and test them!)
IN:  eps ps svg svgz pdf wmf bmp gif ico png pnm ppm tga tiff tif xcf rgb rgba jp2 jpeg jpg
OUT: eps ps svg svgz pdf wmf bmp gif ico png pnm ppm tga tiff tif xcf rgb rgba jp2 jpeg jpg
COMMAND: gm convert -density 300 "BASE.IN" "BASE.OUT"


# --- sam2p ---
# http://code.google.com/p/sam2p/
IN: jpg png tiff tif
OUT: eps ps pdf
COMMAND: sam2p "BASE.IN" "BASE.OUT"


# --- Octave/Matlab ---
# This assumes that the .m script creates a .eps file
# with the same name).  Strips the pdfmark info from the
# file since it confuses latex
IN: m
OUT: eps
COMMAND: octave --silent "BASE.IN" && sed -i s\/pdfmark\/pdfmarkstupid\/g "BASE.OUT"


# --- Python ---
# This assumes that the .py script creates a .eps file.
# Useful if matplotlib or similar is used.

IN: py
OUT: eps
COMMAND: python "BASE.IN"


# --- Text files ---
IN: ps
OUT: txt
COMMAND: ps2ascii "BASE.IN" > "BASE.OUT"

IN: pdf
OUT: txt
COMMAND: pdftotext "BASE.IN" > "BASE.OUT"

# NOTE: enscript doesn't support UTF-8.  This command assumes that the
# input is ASCII or UTF-8 and transliterates it into latin1 encoding
# (which enscript supports)
IN: txt
OUT: pdf
COMMAND: enscript -q --filter="cat %s | iconv -f utf8 -t latin1//translit" --header='$N||Page $% of $='  --borders --margins=36:36:10:36 --tabsize=4 --word-wrap -f Helvetica11 -p - "BASE.IN" | ps2pdf - "BASE.OUT"

# NOTE: Only works with ASCII or UTF-8 text.
IN: txt
OUT: ps
COMMAND: enscript -q --filter="cat %s | iconv -f utf8 -t latin1//translit" --header='$N||Page $% of $='  --borders --margins=36:36:10:36 --tabsize=4 --word-wrap -f Helvetica11 -p "BASE.OUT" "BASE.IN"


# --- Office files ---
IN: csv xls sxc ooxml ods odp ppt sxi doc odt stw rtf
OUT: pdf csv xls sxc ooxml ods odp ppt sxi doc odt stw rtf txt
COMMAND: unoconv -f OUT "BASE.IN"


# --- HDR files ---
IN: pic hdr pfs exr tiff tif ppm pnm jpeg jpg png pfm dpx gif bmp eps cr2 crw
OUT: pic hdr tiff pfs exr tif ppm pnm png pfm dpx gif bmp eps
COMMAND: pfsin "BASE.IN" | pfsout "BASE.OUT"


# --- WAV/MP3/OGG ---
IN: wav
OUT: mp3
COMMAND: lame -h "BASE.IN" "BASE.OUT"

IN: wav
OUT: ogg
COMMAND: oggenc -o "BASE.OUT" "BASE.IN"

IN: ogg
OUT: wav
COMMAND: oggdec -o "BASE.OUT" "BASE.IN"

IN: mp3
OUT: wav
COMMAND: mpg123 --wav "BASE.OUT" "BASE.IN"

IN: mp3
OUT: ogg
COMMAND: mpg32ogg "BASE.IN"

IN: ogg
OUT: mp3
COMMAND: ogg2mp3 "BASE.IN"
